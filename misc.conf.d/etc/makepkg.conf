#
# /etc/makepkg.conf
#

#########################################################################
# SOURCE ACQUISITION
#########################################################################
#
#-- The download utilities that makepkg should use to acquire sources
#  Format: 'protocol::agent'
DLAGENTS=('ftp::/usr/bin/aria2c -x 16 -o %o %u'
          'http::/usr/bin/aria2c -x 16 -o %o %u'
          'https::/usr/bin/aria2c -x 16 -o %o %u'
          'rsync::/usr/bin/rsync -z %u %o'
          'scp::/usr/bin/scp -C %u %o')

# Other common tools:
# /usr/bin/snarf
# /usr/bin/lftpget -c
# /usr/bin/wget

#########################################################################
# ARCHITECTURE, COMPILE FLAGS
#########################################################################
#
CARCH="x86_64"
CHOST="x86_64-unknown-linux-gnu"

assign_cflags(){
  if [ $CC = "icc" ]; then
    export CFLAGS="-fast -pipe -gcc -parallel -openmp"
    export CXXFLAGS="${CFLAGS}"
    export CXX="icpc"
    export HOSTCC="icc"
    export LDFLAGS="-Wl,-O2,--hash-style=gnu,--as-needed,--sort-common,-z,relro -openmp"
  elif [ $CC = 'gcc' ]; then
    export CXX='g++'
    export CFLAGS="${_CFLAGS}"
    export CXXFLAGS="${_CXXFLAGS}"
  elif [ $CC = 'clang' ]; then
    export CXX="clang++"
    export CFLAGS="${CLANGFLAGS}"
    export CXXFLAGS="${CLANGXXFLAGS}"
  fi
}
#-- Exclusive: will only run on x86_64
# -march (or -mcpu) builds exclusively for an architecture
# -mtune optimizes for an architecture, but builds for whole processor family
_CFLAGS="-march=native -mtune=native -Ofast -fomit-frame-pointer -mmmx -mfpmath=both -pipe -ffast-math -freorder-blocks-and-partition -fgcse-sm -fgcse-las -ftracer \
-floop-interchange -floop-strip-mine -floop-block  \
-fuse-linker-plugin -fopenmp \
-floop-parallelize-all -ftree-loop-distribution -ftree-parallelize-loops=4"
_CXXFLAGS="${_CFLAGS}"
CFLAGS="${_CFLAGS}"
CXXFLAGS="${_CXXFLAGS}"
_LDFLAGS="-Wl,-O2,--hash-style=gnu,--as-needed,--sort-common,-z,relro -flto -fuse-linker-plugin -lgomp"
LDFLAGS="${_LDFLAGS}"
CLANGFLAGS="-O4 -march=native -mtune=native -fomit-frame-pointer -pipe -ffast-math -flto "
CLANGXXFLAGS="-O4 -march=native -mtune=native -fomit-frame-pointer -pipe -ffast-math -flto "
#-- Make Flags: change this for DistCC/SMP systems
#MAKEFLAGS="-j2"
#-- Debugging flags
#DEBUG_CFLAGS="-g"
#DEBUG_CXXFLAGS="-g"

#########################################################################
# BUILD ENVIRONMENT
#########################################################################
#
# Defaults: BUILDENV=(fakeroot !distcc color !ccache check !sign)
#  A negated environment option will do the opposite of the comments below.
#
#-- fakeroot: Allow building packages as a non-root user
#-- distcc:   Use the Distributed C/C++/ObjC compiler
#-- color:    Colorize output messages
#-- ccache:   Use ccache to cache compilation
#-- check:    Run the check() function if present in the PKGBUILD
#-- sign:     Generate PGP signature file
#
BUILDENV=(fakeroot !distcc color ccache check !sign)
#
#-- If using DistCC, your MAKEFLAGS will also need modification. In addition,
#-- specify a space-delimited list of hosts running in the DistCC cluster.
#DISTCC_HOSTS=""
#
#-- Specify a directory for package building.
BUILDDIR=/tmp/makepkg

#########################################################################
# GLOBAL PACKAGE OPTIONS
#   These are default values for the options=() settings
#########################################################################
#
# Default: OPTIONS=(strip docs libtool emptydirs zipman purge !upx !debug)
#  A negated option will do the opposite of the comments below.
#
#-- strip:     Strip symbols from binaries/libraries
#-- docs:      Save doc directories specified by DOC_DIRS
#-- libtool:   Leave libtool (.la) files in packages
#-- emptydirs: Leave empty directories in packages
#-- zipman:    Compress manual (man and info) pages in MAN_DIRS with gzip
#-- purge:     Remove files specified by PURGE_TARGETS
#
OPTIONS=(strip docs libtool emptydirs zipman purge !upx !debug)

#-- File integrity checks to use. Valid: md5, sha1, sha256, sha384, sha512
INTEGRITY_CHECK=(md5)
#-- Options to be used when stripping binaries. See `man strip' for details.
STRIP_BINARIES="--strip-all"
#-- Options to be used when stripping shared libraries. See `man strip' for details.
STRIP_SHARED="--strip-unneeded"
#-- Options to be used when stripping static libraries. See `man strip' for details.
STRIP_STATIC="--strip-debug"
#-- Manual (man and info) directories to compress (if zipman is specified)
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})
#-- Doc directories to remove (if !docs is specified)
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
#-- Files to be removed from all packages (if purge is specified)
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)

#########################################################################
# PACKAGE OUTPUT
#########################################################################
#
# Default: put built package and cached source in build directory
#
#-- Destination: specify a fixed directory where all packages will be placed
PKGDEST=/home/shui/dr
#-- Source cache: specify a fixed directory where source files will be cached
#SRCDEST=/home/sources
#-- Source packages: specify a fixed directory where all src packages will be placed
#SRCPKGDEST=/home/srcpackages
#-- Packager: name/email of the person or organization building packages
PACKAGER="DarkRaven"
#-- Specify a key to use for package signing
#GPGKEY=""

#########################################################################
# EXTENSION DEFAULTS
#########################################################################
#
# WARNING: Do NOT modify these variables unless you know what you are
#          doing.
#
PKGEXT='.pkg.tar.gz'
SRCEXT='.src.tar.gz'

# vim:set ft=bash ts=2 sw=2 et:
